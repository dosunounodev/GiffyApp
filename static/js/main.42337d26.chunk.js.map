{"version":3,"sources":["components/Organisms/Footer/styles.js","components/Organisms/Footer/index.jsx","components/Atoms/Logo/styles.js","components/Atoms/Logo/index.jsx","components/Organisms/Header/styles.js","components/Organisms/Header/index.jsx","components/Templates/MainLayout/styles.js","components/Templates/MainLayout/index.jsx","components/Atoms/Gif/styles.js","components/Atoms/Gif/index.jsx","components/Organisms/ListOfGifs/styles.js","components/Organisms/ListOfGifs/index.jsx","services/getGifs.js","hooks/useGetGifsByKeyword.js","services/getTrendingGifs.js","services/getTrendingSearchTerms.js","components/Pages/Home/styles.js","components/Organisms/SearchForm/styles.js","components/Organisms/SearchForm/index.jsx","components/Pages/Home/index.jsx","hooks/useGetTrendingGifs.js","hooks/useGetTrendingSearchTerms.js","components/Pages/Favs/styles.js","components/Pages/Favs/index.jsx","components/Pages/SearchResults/styles.js","components/Pages/SearchResults/index.jsx","components/Pages/Detail/styles.js","services/getGifById.js","components/Pages/Detail/index.jsx","hooks/useGetGifById.js","components/Pages/NotFound/index.jsx","App.js","GlobalStyle.js","reportWebVitals.js","index.js"],"names":["FooterWrapper","styled","footer","Footer","href","target","rel","LogoContainer","div","Title","h1","Logo","span","to","HeaderWrapper","header","Header","Main","main","MainLayout","children","GifContainer","article","GifTitle","h3","GifImageWrapper","GifImage","img","Gif","gifData","id","title","url","alt","src","List","ListOfGifs","gifs","map","singleGif","API_KEY","getGifs","a","keyword","limit","fetch","res","json","data","gif","images","downsized_medium","useGetGifsByKeyword","useState","setGifs","loading","setLoading","useEffect","then","response","getTrendingGifs","getTrendingSearchTerms","console","log","HomeTitle","h2","PopularGifsWrapper","PopularGifLink","Link","SearchFormWrapper","form","SearchForm","setKeyword","history","useHistory","onSubmit","e","preventDefault","push","type","value","placeholder","onChange","Home","trendingGifs","useGetTrendingGifs","trendingTerms","useGetTrendingSearchTerms","topic","FavsTitle","Favs","SearchTitle","SearchResults","useParams","DetailTitle","getGifById","gifId","Detail","useGetGifById","NotFound","App","exact","path","component","GlobalStyle","createGlobalStyle","normalize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42337d26.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst FooterWrapper = styled.footer`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100px;\n  margin-top: auto;\n  color: #fafafa;\n  background-color: #252525;\n\n  p {\n    font-size: 1.8rem;\n    font-weight: bold;\n  }\n\n  a {\n    color: #1565c0;\n    &:hover {\n      color: #fff;\n      text-decoration: underline;\n    }\n  }\n`;\n\nexport { FooterWrapper };\n","import React from 'react';\nimport { FooterWrapper } from './styles';\n\nconst Footer = () => {\n  return (\n    <FooterWrapper>\n      <p>\n        Made with ðŸ’™ by{' '}\n        <a\n          href=\"https://github.com/dosunounodev\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          dosunounodev\n        </a>\n      </p>\n    </FooterWrapper>\n  );\n};\n\nexport default Footer;\n","import styled from 'styled-components';\n\nconst LogoContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nconst Title = styled.h1`\n  font-size: 4.8rem;\n  font-style: italic;\n  margin-right: 10px;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 1.6rem;\n  font-weight: 400;\n`;\n\nexport { LogoContainer, Title, SubTitle };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LogoContainer, SubTitle, Title } from './styles';\n\nconst Logo = () => {\n  return (\n    <Link to=\"/\">\n      <LogoContainer>\n        <Title>Giffy</Title>\n        {/* <SubTitle>The Gif Searcher</SubTitle> */}\n      </LogoContainer>\n    </Link>\n  );\n};\n\nexport default Logo;\n","import styled from 'styled-components';\n\nconst HeaderWrapper = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  padding: 20px;\n  color: #fafafa;\n  background: #b92b27; /* fallback for old browsers */\n  background: -webkit-linear-gradient(\n    to bottom,\n    #1565c0,\n    #111\n  ); /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(\n    to bottom,\n    #1565c0,\n    #111\n  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n`;\n\nexport { HeaderWrapper };\n","import React from 'react';\nimport Logo from 'components/Atoms/Logo';\nimport { HeaderWrapper } from './styles';\n\nconst Header = () => {\n  return (\n    <HeaderWrapper>\n      <Logo />\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #111;\n  color: #fff;\n`;\n\nexport { Main };\n","import React from 'react';\nimport Footer from 'components/Organisms/Footer';\nimport Header from 'components/Organisms/Header';\nimport { Main } from './styles';\n\nconst MainLayout = ({ children }) => {\n  return (\n    <Main>\n      <Header />\n      {children}\n      <Footer />\n    </Main>\n  );\n};\n\nexport default MainLayout;\n","import styled from 'styled-components';\n\nconst GifContainer = styled.article`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 400px;\n  padding: 20px;\n  background-color: rgba(255, 255, 255, 0.1);\n  border: 2px solid #fafafa;\n  border-radius: 6px;\n`;\n\nconst GifTitle = styled.h3`\n  width: 100%;\n  height: 50px;\n  max-width: 280px;\n  font-size: 1.4rem;\n  text-align: center;\n`;\n\nconst GifImageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  margin-top: 20px;\n  border-radius: 6px;\n  overflow: hidden;\n`;\n\nconst GifImage = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport { GifContainer, GifTitle, GifImageWrapper, GifImage };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { GifContainer, GifTitle, GifImageWrapper, GifImage } from './styles';\n\nconst Gif = ({ gifData }) => {\n  const { id, title, url } = gifData;\n  return (\n    <Link to={`/gif/${id}`}>\n      <GifContainer>\n        <GifTitle>{title}</GifTitle>\n        <GifImageWrapper>\n          <GifImage key={id} alt={title} src={url}></GifImage>\n        </GifImageWrapper>\n      </GifContainer>\n    </Link>\n  );\n};\n\nexport default Gif;\n","import styled from 'styled-components';\n\nconst List = styled.div`\n  display: grid;\n  /* grid-template-columns: repeat(auto-fill, minmax(280px, 1fr)); */\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  justify-items: center;\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  gap: 2rem;\n`;\n\nexport { List };\n","import React from 'react';\nimport Gif from 'components/Atoms/Gif';\nimport { List } from './styles';\n\nconst ListOfGifs = ({ gifs }) => {\n  return (\n    <List>\n      {gifs.map((singleGif) => (\n        <Gif key={singleGif.id} gifData={singleGif} />\n      ))}\n    </List>\n  );\n};\n\nexport default ListOfGifs;\n","const API_KEY = 'MZTqNa5Op2YRSnpg7q7qWOMNtQPDqtSM';\n\nconst getGifs = async ({ keyword = 'panda', limit = 10 } = {}) => {\n  const res = await fetch(\n    `https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${keyword}&limit=${limit}&offset=0&rating=g&lang=en`\n  );\n  const json = await res.json();\n  const { data } = json;\n  const gifs = data.map((gif) => {\n    const { id, images, title } = gif;\n    const url = images.downsized_medium.url;\n    return { id, title, url };\n  });\n  return gifs;\n};\n\nexport { getGifs };\n","import { useState, useEffect } from 'react';\nimport { getGifs } from 'services/getGifs';\n\nconst useGetGifsByKeyword = ({ keyword, limit=10 }) => {\n  const [gifs, setGifs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getGifs({ keyword, limit })\n      .then((response) => setGifs(response))\n      .then(setLoading(false));\n  }, [keyword, limit]);\n\n  return { loading, gifs };\n};\n\nexport { useGetGifsByKeyword };\n","const API_KEY = 'MZTqNa5Op2YRSnpg7q7qWOMNtQPDqtSM';\n\nconst getTrendingGifs = async ({ limit = 10 } = {}) => {\n  const res = await fetch(\n    `https://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}&limit=${limit}&rating=g`\n  );\n  const json = await res.json();\n  const { data } = json;\n  const gifs = data.map((gif) => {\n    const { id, images, title } = gif;\n    const url = images.downsized_medium.url;\n    return { id, title, url };\n  });\n  return gifs;\n};\n\nexport { getTrendingGifs };\n\n//\n","const API_KEY = 'MZTqNa5Op2YRSnpg7q7qWOMNtQPDqtSM';\n\nconst getTrendingSearchTerms = async () => {\n  const res = await fetch(\n    `https://api.giphy.com/v1/trending/searches?api_key=${API_KEY}`\n  );\n  const json = await res.json();\n  console.log(json);\n  const { data } = json;\n  return data;\n};\n\nexport { getTrendingSearchTerms };\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst HomeTitle = styled.h2`\n  display: block;\n  width: 100%;\n  margin-bottom: 20px;\n  font-size: 3.6rem;\n  text-align: center;\n`;\n\nconst PopularGifsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  margin-top: 50px;\n`;\n\nconst PopularGifLink = styled(Link)`\n  font-size: 2rem;\n  margin: 10px 20px;\n  padding: 5px;\n  border: 2px solid #1565c0;\n`;\n\nexport { HomeTitle, PopularGifsWrapper, PopularGifLink };\n","import styled from 'styled-components';\n\nexport const SearchFormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  margin-bottom: 30px;\n\n  input,\n  button {\n    display: block;\n    width: 100%;\n    max-width: 280px;\n    padding: 10px;\n    border: 2px solid #1565c0;\n    border-radius: 5px;\n    text-align: center;\n    text-transform: uppercase;\n    font-weight: bold;\n    color: #1565c0;\n    transition-property: color, background-color;\n    transition-duration: 0.3s;\n    will-change: color, background-color;\n  }\n\n  input {\n    margin-bottom: 10px;\n    color: initial;\n  }\n\n  button {\n    cursor: pointer;\n    &:hover {\n      color: #fff;\n      background-color: #1565c0;\n    }\n  }\n`;\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport { SearchFormWrapper } from './styles';\n\nconst SearchForm = ({ keyword, setKeyword }) => {\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    history.push(`/search/${keyword}`);\n  };\n\n  return (\n    <SearchFormWrapper onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={keyword}\n        placeholder=\"Search a gif here\"\n        onChange={(e) => setKeyword(e.target.value)}\n      />\n      <button>View All Results</button>\n    </SearchFormWrapper>\n  );\n};\n\nexport default SearchForm;\n","import React, { useState } from 'react';\nimport ListOfGifs from 'components/Organisms/ListOfGifs';\nimport { useGetGifsByKeyword } from 'hooks/useGetGifsByKeyword';\nimport { useGetTrendingGifs } from 'hooks/useGetTrendingGifs';\nimport { useGetTrendingSearchTerms } from 'hooks/useGetTrendingSearchTerms';\nimport { HomeTitle, PopularGifsWrapper, PopularGifLink } from './styles';\nimport SearchForm from 'components/Organisms/SearchForm';\n\nconst Home = () => {\n  const [keyword, setKeyword] = useState('');\n\n  const { gifs, loading } = useGetGifsByKeyword({ keyword, limit: 5 });\n\n  const { gifs: trendingGifs } = useGetTrendingGifs({\n    limit: 10,\n  });\n\n  const { gifs: trendingTerms } = useGetTrendingSearchTerms();\n\n  return (\n    <section>\n      {loading ? (\n        <HomeTitle>Cargando . . . </HomeTitle>\n      ) : (\n        <>\n          <HomeTitle>Search a Gif</HomeTitle>\n          <SearchForm keyword={keyword} setKeyword={setKeyword} />\n          <ListOfGifs gifs={gifs} />\n          <PopularGifsWrapper>\n            <HomeTitle>Top Categories</HomeTitle>\n            {trendingTerms.map((topic) => (\n              <PopularGifLink key={topic} to={`/search/${topic}`}>\n                {topic}\n              </PopularGifLink>\n            ))}\n          </PopularGifsWrapper>\n          <PopularGifsWrapper>\n            <HomeTitle>The Top 10 Gifs Trending</HomeTitle>\n            <ListOfGifs gifs={trendingGifs} />\n          </PopularGifsWrapper>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from 'react';\nimport { getTrendingGifs } from 'services/getTrendingGifs';\n\nconst useGetTrendingGifs = ({ limit }) => {\n  const [gifs, setGifs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getTrendingGifs({ limit }).then((response) => setGifs(response));\n    setLoading(false);\n  }, [limit]);\n\n  return { loading, gifs };\n};\n\nexport { useGetTrendingGifs };\n","import { useState, useEffect } from 'react';\nimport { getTrendingSearchTerms } from 'services/getTrendingSearchTerms';\n\nconst useGetTrendingSearchTerms = () => {\n  const [gifs, setGifs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getTrendingSearchTerms().then((response) => setGifs(response));\n    setLoading(false);\n  }, []);\n\n  return { loading, gifs };\n};\n\nexport { useGetTrendingSearchTerms };\n","import styled from 'styled-components';\n\nconst FavsTitle = styled.h2`\n  margin-bottom: 20px;\n  font-size: 3.6rem;\n  text-align: center;\n`;\n\nexport { FavsTitle };\n","import React from 'react';\nimport { FavsTitle } from './styles';\n\nconst Favs = () => {\n  return (\n    <section>\n      <FavsTitle>Estos son los favs</FavsTitle>\n    </section>\n  );\n};\n\nexport default Favs;\n","import styled from 'styled-components';\n\nconst SearchTitle = styled.h2`\n  margin-bottom: 20px;\n  font-size: 3.6rem;\n  text-align: center;\n`;\n\nexport { SearchTitle };\n","import React from 'react';\nimport { useParams } from 'react-router';\nimport ListOfGifs from 'components/Organisms/ListOfGifs';\nimport { SearchTitle } from './styles';\nimport { useGetGifsByKeyword } from 'hooks/useGetGifsByKeyword';\n\nconst SearchResults = () => {\n  const { keyword } = useParams();\n  const { gifs, loading } = useGetGifsByKeyword({ keyword, limit: 25 });\n\n  return (\n    <section>\n      {loading ? (\n        <SearchTitle>Cargando . . . </SearchTitle>\n      ) : (\n        <>\n          <SearchTitle>Resultados de '{keyword}'</SearchTitle>\n          <ListOfGifs gifs={gifs} />\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default SearchResults;\n","import styled from 'styled-components';\n\nconst DetailTitle = styled.h2`\n  margin-bottom: 20px;\n  font-size: 3.6rem;\n  text-align: center;\n`;\n\nexport { DetailTitle };\n","const API_KEY = 'MZTqNa5Op2YRSnpg7q7qWOMNtQPDqtSM';\n\nconst getGifById = async ({ gifId } = {}) => {\n  const res = await fetch(\n    `https://api.giphy.com/v1/gifs/${gifId}?api_key=${API_KEY}`\n  );\n  const json = await res.json();\n  const { id, images, title } = json.data;\n  const url = images.downsized_medium.url;\n  const gif = [{ id, title, url }];\n  console.log(gif);\n  return gif;\n};\n\nexport { getGifById };\n","import React from 'react';\nimport ListOfGifs from 'components/Organisms/ListOfGifs';\nimport { useParams } from 'react-router';\nimport { DetailTitle } from './styles';\nimport { useGetGifById } from 'hooks/useGetGifById';\n\nconst Detail = () => {\n  const { gifId } = useParams();\n  const { gifs, loading } = useGetGifById({ gifId });\n\n  return (\n    <section>\n      {loading ? (\n        <DetailTitle>Cargando . . . </DetailTitle>\n      ) : (\n        <>\n          <DetailTitle>Gif Detail</DetailTitle>\n          <ListOfGifs gifs={gifs} />\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default Detail;\n","import { useState, useEffect } from 'react';\nimport { getGifById } from 'services/getGifById';\n\nconst useGetGifById = ({ gifId }) => {\n  const [gifs, setGifs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getGifById({ gifId }).then((response) => setGifs(response));\n    setLoading(false);\n  }, [gifId]);\n\n  return { loading, gifs };\n};\n\nexport { useGetGifById };\n","import React from 'react'\n\nconst NotFound = () => {\n    return (\n        <section>\n            <h2>404 not found</h2>\n        </section>\n    )\n}\n\nexport default NotFound\n","import { Route, Switch } from 'react-router';\nimport MainLayout from './components/Templates/MainLayout';\nimport Home from './components/Pages/Home';\nimport Favs from './components/Pages/Favs';\nimport SearchResults from './components/Pages/SearchResults';\nimport Detail from './components/Pages/Detail';\nimport NotFound from './components/Pages/NotFound';\n\nfunction App() {\n  return (\n    <MainLayout>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/favs\" component={Favs} />\n        <Route exact path=\"/search/:keyword\" component={SearchResults} />\n        <Route exact path=\"/gif/:gifId\" component={Detail} />\n        <Route path=\"*\" component={NotFound} />\n      </Switch>\n    </MainLayout>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\nimport { normalize } from 'styled-normalize';\n\nconst GlobalStyle = createGlobalStyle`\n\n${normalize}\n\n* {\n    box-sizing: border-box;\n}\n\n*::after, *::before {\n    box-sizing: inherit;\n}\n\nhtml {\n    font-size: 62.5%\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    font-family: 'Open Sans', sans-serif;\n    font-size:1.6rem;\n    font-weight: 400;\n    color: #fafafa;\n}\n\nsection {\n    width: 100%;\n    padding: 20px;\n}\n\nh1, h2, h3, p {\n    margin: 0;\n    padding: 0;\n}\n\na {\n    text-decoration:none;\n    color: inherit;\n}\n\n`;\n\nexport default GlobalStyle;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport GlobalStyle from './GlobalStyle';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <GlobalStyle />\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}