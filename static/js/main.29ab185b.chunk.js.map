{"version":3,"sources":["services/settings.js","components/Atoms/Gif/styles.js","components/Atoms/Gif/index.jsx","components/Organisms/ListOfGifs/styles.js","components/Organisms/ListOfGifs/index.jsx","components/Organisms/Footer/styles.js","components/Organisms/Footer/index.jsx","components/Atoms/Logo/styles.js","components/Atoms/Logo/index.jsx","components/Organisms/Header/styles.js","components/Organisms/Header/index.jsx","components/Templates/MainLayout/styles.js","components/Templates/MainLayout/index.jsx","contexts/DataContext.js","services/getGifs.js","hooks/useGetGifsByKeyword.js","components/Organisms/SearchForm/styles.js","components/Atoms/Button/styles.js","components/Atoms/Button/index.jsx","components/Organisms/SearchForm/index.jsx","components/Organisms/SearchGifsSection/index.jsx","components/Organisms/LastSearchSection/index.jsx","hooks/useNearScreen.js","components/Organisms/TrendingGifsSection/index.jsx","components/Pages/Home/styles.js","components/Pages/Home/index.jsx","components/Pages/SearchResults/styles.js","components/Pages/SearchResults/index.jsx","services/getGifById.js","components/Pages/Detail/styles.js","components/Pages/Detail/index.jsx","hooks/useGetGifById.js","components/Pages/NotFound/index.jsx","services/getTrendingSearchTerms.js","contexts/DataProvider.js","hooks/useGetTrendingSearchTerms.js","App.js","GlobalStyle.js","reportWebVitals.js","index.js"],"names":["API_KEY","API_URL","GifContainer","styled","article","GifTitle","h3","GifImage","img","Gif","gifData","id","title","url","to","alt","src","List","div","ListOfGifs","gifs","map","singleGif","FooterWrapper","footer","Footer","href","target","rel","LogoContainer","Title","h1","Logo","span","HeaderWrapper","header","Header","Main","main","MainLayout","children","DataContext","React","createContext","getGifs","a","keyword","limit","page","fetch","res","json","data","gif","images","downsized_medium","useGetGifsByKeyword","useState","setGifs","loading","setLoading","setPage","useEffect","then","response","prevGifs","SearchFormWrapper","form","StyledButton","button","Button","onClick","SearchForm","setKeyword","history","useHistory","setLastSearch","useContext","onSubmit","e","preventDefault","push","localStorage","setItem","type","value","placeholder","onChange","SearchGifsSection","LastSearchSection","lastSearch","lastSearchGifs","useNearScreen","distance","isNearScreen","setIsNearScreen","fromRef","useRef","observer","entries","isIntersecting","unobserve","current","Promise","resolve","IntersectionObserver","rootMargin","observe","disconnect","TrendingGifWrapper","lazy","TrendingGifsSection","ref","fallback","HomeTitle","h2","SectionWrapper","bgcolor","TrendingsWrapper","TrendingGifLink","Link","Home","trendingTerms","topic","SearchTitle","SearchResults","useParams","prevPage","getGifById","gifId","DetailTitle","Detail","useGetGifById","NotFound","getTrendingSearchTerms","DataProvider","initialLastSearch","getItem","useGetTrendingSearchTerms","Provider","App","exact","path","component","GlobalStyle","createGlobalStyle","normalize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29ab185b.chunk.js","sourcesContent":["export const API_KEY = 'MZTqNa5Op2YRSnpg7q7qWOMNtQPDqtSM';\n\nexport const API_URL = 'https://api.giphy.com/v1';\n","import styled from 'styled-components';\n\nconst GifContainer = styled.article`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  min-width: 200px;\n  min-height: 200px;\n`;\n\nconst GifTitle = styled.h3`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  padding: 5px;\n  font-size: 1.5rem;\n  text-align: center;\n  background-color: rgba(0, 0, 0, 0.7);\n  color: white;\n`;\nconst GifImage = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport { GifContainer, GifTitle, GifImage };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { GifContainer, GifTitle, GifImage } from './styles';\n\nconst Gif = ({ gifData }) => {\n  const { id, title, url } = gifData;\n  return (\n    <Link to={`/gif/${id}`}>\n      <GifContainer>\n        <GifTitle>{title}</GifTitle>\n        <GifImage key={id} alt={title} src={url}></GifImage>\n      </GifContainer>\n    </Link>\n  );\n};\n\nexport default Gif;\n","import styled from 'styled-components';\n\nconst List = styled.div`\n  display: grid;\n  /* grid-template-columns: repeat(auto-fill, minmax(280px, 1fr)); */\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  justify-items: center;\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  gap: 2rem;\n`;\n\nexport { List };\n","import React from 'react';\nimport Gif from 'components/Atoms/Gif';\nimport { List } from './styles';\n\nconst ListOfGifs = ({ gifs }) => {\n  return (\n    <List>\n      {gifs.map((singleGif) => (\n        <Gif key={singleGif.id} gifData={singleGif} />\n      ))}\n    </List>\n  );\n};\n\nexport default ListOfGifs;\n","import styled from 'styled-components';\n\nconst FooterWrapper = styled.footer`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100px;\n  margin-top: auto;\n  color: #fafafa;\n  background-color: #252525;\n\n  p {\n    font-size: 1.8rem;\n    font-weight: bold;\n  }\n\n  a {\n    color: #1565c0;\n    &:hover {\n      color: #fff;\n      text-decoration: underline;\n    }\n  }\n`;\n\nexport { FooterWrapper };\n","import React from 'react';\nimport { FooterWrapper } from './styles';\n\nconst Footer = () => {\n  return (\n    <FooterWrapper>\n      <p>\n        Made with 💙 by{' '}\n        <a\n          href=\"https://github.com/dosunounodev\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          dosunounodev\n        </a>\n      </p>\n    </FooterWrapper>\n  );\n};\n\nexport default Footer;\n","import styled from 'styled-components';\n\nconst LogoContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nconst Title = styled.h1`\n  font-size: 4.8rem;\n  font-style: italic;\n  margin-right: 10px;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 1.6rem;\n  font-weight: 400;\n`;\n\nexport { LogoContainer, Title, SubTitle };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LogoContainer, SubTitle, Title } from './styles';\n\nconst Logo = () => {\n  return (\n    <Link to=\"/\">\n      <LogoContainer>\n        <Title>Giffy</Title>\n        {/* <SubTitle>The Gif Searcher</SubTitle> */}\n      </LogoContainer>\n    </Link>\n  );\n};\n\nexport default Logo;\n","import styled from 'styled-components';\n\nconst HeaderWrapper = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  padding: 20px;\n  color: #fafafa;\n  background: #b92b27; /* fallback for old browsers */\n  background: -webkit-linear-gradient(\n    to bottom,\n    #1565c0,\n    #111\n  ); /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(\n    to bottom,\n    #1565c0,\n    #111\n  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n`;\n\nexport { HeaderWrapper };\n","import React from 'react';\nimport Logo from 'components/Atoms/Logo';\nimport { HeaderWrapper } from './styles';\n\nconst Header = () => {\n  return (\n    <HeaderWrapper>\n      <Logo />\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #000;\n  color: #fff;\n`;\n\nexport { Main };\n","import React from 'react';\nimport Footer from 'components/Organisms/Footer';\nimport Header from 'components/Organisms/Header';\nimport { Main } from './styles';\n\nconst MainLayout = ({ children }) => {\n  return (\n    <Main>\n      <Header />\n      {children}\n      <Footer />\n    </Main>\n  );\n};\n\nexport default MainLayout;\n","import React from 'react';\n\nexport const DataContext = React.createContext();\n","import { API_URL, API_KEY } from 'services/settings';\n\nconst getGifs = async ({ keyword = 'gif', limit = 10, page = 0 } = {}) => {\n  const res = await fetch(\n    `${API_URL}/gifs/search?api_key=${API_KEY}&q=${keyword}&limit=${limit}&offset=${\n      page * limit\n    }&rating=g&lang=en`\n  );\n  const json = await res.json();\n  const { data } = json;\n  const gifs = data.map((gif) => {\n    const { id, images, title } = gif;\n    const url = images.downsized_medium.url;\n    return { id, title, url };\n  });\n  return gifs;\n};\n\nexport { getGifs };\n","import { useState, useEffect } from 'react';\nimport { getGifs } from 'services/getGifs';\n\nconst INITIAL_PAGE = 0;\n\nconst useGetGifsByKeyword = ({ keyword, limit = '' } = {}) => {\n  const [gifs, setGifs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(INITIAL_PAGE);\n\n  useEffect(() => {\n    getGifs({ keyword, limit })\n      .then((response) => setGifs(response))\n      .then(setLoading(false));\n  }, [keyword, limit]);\n\n  useEffect(() => {\n    if (page === INITIAL_PAGE) return;\n\n    setLoading(true);\n\n    getGifs({ keyword, limit, page })\n      .then((response) => setGifs((prevGifs) => [...prevGifs, ...response]))\n      .then(setLoading(false));\n  }, [keyword, limit, page]);\n\n  return { loading, gifs, setPage };\n};\n\nexport { useGetGifsByKeyword };\n","import styled from 'styled-components';\n\nexport const SearchFormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  height: 100px;\n  max-width: 600px;\n  margin-bottom: 20px;\n  @media screen and (min-width: 650px) {\n    flex-direction: row;\n    justify-content: space-around;\n    height: 60px;\n  }\n\n  input,\n  button {\n    display: block;\n    width: 100%;\n    max-width: 280px;\n    height: 40px;\n    padding: 10px;\n    border: 2px solid #1565c0;\n    border-radius: 5px;\n    text-align: center;\n    font-weight: bold;\n    color: #1565c0;\n    transition-property: color, background-color;\n    transition-duration: 0.3s;\n    will-change: color, background-color;\n  }\n\n  input {\n    color: initial;\n  }\n\n  button {\n    cursor: pointer;\n    text-transform: uppercase;\n    &:hover {\n      color: #fff;\n      background-color: #1565c0;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  display: block;\n  width: 100%;\n  max-width: 280px;\n  margin: 0 auto;\n  height: 40px;\n  padding: 10px;\n  border: 2px solid #1565c0;\n  border-radius: 5px;\n  text-align: center;\n  font-weight: bold;\n  color: #1565c0;\n  transition-property: color, background-color;\n  transition-duration: 0.3s;\n  will-change: color, background-color;\n  cursor: pointer;\n  text-transform: uppercase;\n  &:hover {\n    color: #fff;\n    background-color: #1565c0;\n  }\n`;\n\nexport { StyledButton };\n","import React from 'react';\nimport { StyledButton } from './styles';\n\nconst Button = ({ children, onClick }) => {\n  return <StyledButton onClick={onClick}>{children}</StyledButton>;\n};\n\nexport default Button;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router';\nimport { DataContext } from 'contexts/DataContext';\nimport { SearchFormWrapper } from './styles';\nimport Button from 'components/Atoms/Button';\n\nconst SearchForm = ({ keyword, setKeyword }) => {\n  const history = useHistory();\n  const { setLastSearch } = useContext(DataContext);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    history.push(`/search/${keyword}`);\n    setLastSearch(keyword);\n    localStorage.setItem('lastSearch', keyword);\n  };\n\n  return (\n    <SearchFormWrapper onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={keyword}\n        placeholder=\"Search a gif here\"\n        onChange={(e) => setKeyword(e.target.value)}\n      />\n      <Button type=\"submit\">View All Results</Button>\n    </SearchFormWrapper>\n  );\n};\n\nexport default SearchForm;\n","import React, { useState } from 'react';\nimport { useGetGifsByKeyword } from 'hooks/useGetGifsByKeyword';\nimport ListOfGifs from 'components/Organisms/ListOfGifs';\nimport SearchForm from 'components/Organisms/SearchForm';\n\nconst SearchGifsSection = () => {\n  const [keyword, setKeyword] = useState('');\n  const { gifs, loading } = useGetGifsByKeyword({ keyword, limit: 5 });\n  return (\n    <>\n      {loading ? (\n        <p>Loading. . .</p>\n      ) : (\n        <>\n          <SearchForm keyword={keyword} setKeyword={setKeyword} />\n          <ListOfGifs gifs={gifs} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default SearchGifsSection;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router';\nimport { DataContext } from 'contexts/DataContext';\nimport { useGetGifsByKeyword } from 'hooks/useGetGifsByKeyword';\nimport ListOfGifs from 'components/Organisms/ListOfGifs';\nimport Button from 'components/Atoms/Button';\n\nconst LastSearchSection = () => {\n  const { lastSearch } = useContext(DataContext);\n  const { gifs: lastSearchGifs, loading } = useGetGifsByKeyword({\n    keyword: lastSearch || '',\n    limit: 5,\n  });\n  const history = useHistory();\n  return (\n    <>\n      {loading ? (\n        <p>Loading. . .</p>\n      ) : (\n        <>\n          <ListOfGifs gifs={lastSearchGifs} />\n          <br />\n          <Button onClick={() => history.push(`/search/${lastSearch}`)}>\n            View all '{lastSearch}' gifs\n          </Button>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default LastSearchSection;\n","import { useEffect, useRef, useState } from 'react';\n\nconst useNearScreen = ({ distance } = {}) => {\n  const [isNearScreen, setIsNearScreen] = useState(false);\n  const fromRef = useRef();\n\n  useEffect(() => {\n    let observer;\n    const onChange = (entries, observer) => {\n      const element = entries[0];\n      // console.log(element.isIntersecting);\n      if (element.isIntersecting) {\n        setIsNearScreen(true);\n        observer.unobserve(fromRef.current);\n      }\n    };\n\n    Promise.resolve(\n      typeof IntersectionObserver !== 'undefined'\n        ? IntersectionObserver\n        : import('intersection-observer')\n    ).then(() => {\n      observer = new IntersectionObserver(onChange, {\n        rootMargin: distance || '100px',\n      });\n\n      observer.observe(fromRef.current);\n    });\n\n    return () => {\n      observer && observer.disconnect();\n    };\n  }, [distance]);\n\n  return { isNearScreen, fromRef };\n};\n\nexport default useNearScreen;\n","import React, { Suspense } from 'react';\nimport useNearScreen from 'hooks/useNearScreen';\n// import TrendingGifWrapper from './TrendingGifWrapper';\n\nconst TrendingGifWrapper = React.lazy(() => import('./TrendingGifWrapper'));\n\nconst TrendingGifsSection = () => {\n  const { isNearScreen, fromRef } = useNearScreen();\n\n  return (\n    <section ref={fromRef}>\n      <Suspense fallback={null}>\n        {isNearScreen ? <TrendingGifWrapper /> : null}\n      </Suspense>\n    </section>\n  );\n};\n\nexport default TrendingGifsSection;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst HomeTitle = styled.h2`\n  display: block;\n  width: 100%;\n  margin-bottom: 20px;\n  font-size: 3.6rem;\n  text-align: center;\n`;\n\nconst SectionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  /* max-width: 1200px; */\n  margin: 0 auto;\n  margin-bottom: 50px;\n  padding: 20px 0;\n  background-color: ${({ bgcolor }) => (bgcolor ? bgcolor : 'inherit')};\n  color: ${({ bgcolor }) => (bgcolor === 'white' ? 'black' : 'inherit')};\n`;\n\nconst TrendingsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  max-width: 900px;\n`;\n\nconst TrendingGifLink = styled(Link)`\n  font-size: 2rem;\n  margin: 10px;\n  padding: 5px;\n  border: 2px solid #1565c0;\n  &:hover {\n    background-color: #000;\n    color: #1565c0;\n  }\n`;\n\nexport { HomeTitle, SectionWrapper, TrendingsWrapper, TrendingGifLink };\n","import React, { useContext } from 'react';\nimport { DataContext } from 'contexts/DataContext';\nimport SearchGifsSection from 'components/Organisms/SearchGifsSection';\nimport LastSearchSection from 'components/Organisms/LastSearchSection';\nimport TrendingGifsSection from 'components/Organisms/TrendingGifsSection';\n\nimport {\n  HomeTitle,\n  SectionWrapper,\n  TrendingsWrapper,\n  TrendingGifLink,\n} from './styles';\n\nconst Home = () => {\n  const { lastSearch, trendingTerms } = useContext(DataContext);\n\n  return (\n    <section>\n      <SectionWrapper>\n        <SearchGifsSection />\n      </SectionWrapper>\n\n      {lastSearch ? (\n        <SectionWrapper>\n          <HomeTitle>Last Search: '{lastSearch}'</HomeTitle>\n          <LastSearchSection />\n        </SectionWrapper>\n      ) : null}\n\n      <SectionWrapper bgcolor=\"white\">\n        <HomeTitle>Top Categories</HomeTitle>\n        <TrendingsWrapper>\n          {trendingTerms.map((topic) => (\n            <TrendingGifLink key={topic} to={`/search/${topic}`}>\n              {topic}\n            </TrendingGifLink>\n          ))}\n        </TrendingsWrapper>\n      </SectionWrapper>\n\n      <SectionWrapper>\n        <HomeTitle>The Top 10 Gifs Trending</HomeTitle>\n        <TrendingGifsSection />\n      </SectionWrapper>\n    </section>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nconst SearchTitle = styled.h2`\n  margin-bottom: 20px;\n  font-size: 3.6rem;\n  text-align: center;\n`;\n\nexport { SearchTitle };\n","import React from 'react';\nimport { useParams } from 'react-router';\nimport ListOfGifs from 'components/Organisms/ListOfGifs';\nimport { SearchTitle } from './styles';\nimport { useGetGifsByKeyword } from 'hooks/useGetGifsByKeyword';\nimport Button from 'components/Atoms/Button';\n\nconst SearchResults = () => {\n  const { keyword } = useParams();\n  const { gifs, loading, setPage } = useGetGifsByKeyword({\n    keyword,\n    limit: 10,\n  });\n\n  const handleNextPage = () => {\n    setPage((prevPage) => prevPage + 1);\n  };\n\n  return (\n    <section>\n      {loading ? (\n        <SearchTitle>Loading . . . </SearchTitle>\n      ) : (\n        <>\n          <SearchTitle>Results of '{keyword}'</SearchTitle>\n          <ListOfGifs gifs={gifs} />\n          <br />\n          <Button onClick={handleNextPage}> Next Page</Button>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default SearchResults;\n","import { API_URL, API_KEY } from 'services/settings';\n\nconst getGifById = async ({ gifId } = {}) => {\n  const res = await fetch(`${API_URL}/gifs/${gifId}?api_key=${API_KEY}`);\n  const json = await res.json();\n  const { id, images, title } = json.data;\n  const url = images.downsized_medium.url;\n  const gif = [{ id, title, url }];\n  return gif;\n};\n\nexport { getGifById };\n","import styled from 'styled-components';\n\nconst DetailTitle = styled.h2`\n  margin-bottom: 20px;\n  font-size: 3.6rem;\n  text-align: center;\n`;\n\nexport { DetailTitle };\n","import React from 'react';\nimport { useParams } from 'react-router';\nimport ListOfGifs from 'components/Organisms/ListOfGifs';\nimport { useGetGifById } from 'hooks/useGetGifById';\nimport { DetailTitle } from './styles';\n\nconst Detail = () => {\n  const { gifId } = useParams();\n  const { gifs, loading } = useGetGifById({ gifId });\n\n  return (\n    <section>\n      {loading ? (\n        <DetailTitle>Cargando . . . </DetailTitle>\n      ) : (\n        <>\n          <ListOfGifs gifs={gifs} />\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default Detail;\n","import { useState, useEffect } from 'react';\nimport { getGifById } from 'services/getGifById';\n\nconst useGetGifById = ({ gifId }) => {\n  const [gifs, setGifs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getGifById({ gifId }).then((response) => setGifs(response));\n    setLoading(false);\n  }, [gifId]);\n\n  return { loading, gifs };\n};\n\nexport { useGetGifById };\n","import React from 'react'\n\nconst NotFound = () => {\n    return (\n        <section>\n            <h2>404 not found</h2>\n        </section>\n    )\n}\n\nexport default NotFound\n","import { API_URL, API_KEY } from 'services/settings';\n\nconst getTrendingSearchTerms = async () => {\n  const res = await fetch(`${API_URL}/trending/searches?api_key=${API_KEY}`);\n  const json = await res.json();\n  const { data } = json;\n  return data;\n};\n\nexport { getTrendingSearchTerms };\n","import React, { useState } from 'react';\nimport { DataContext } from './DataContext';\n\nimport { useGetTrendingSearchTerms } from 'hooks/useGetTrendingSearchTerms';\n\nconst DataProvider = ({ children }) => {\n  const initialLastSearch = localStorage.getItem('lastSearch') || null;\n  const [lastSearch, setLastSearch] = useState(initialLastSearch);\n  const { gifs: trendingTerms } = useGetTrendingSearchTerms();\n\n  const data = {\n    lastSearch,\n    setLastSearch,\n    trendingTerms,\n  };\n\n  return <DataContext.Provider value={data}>{children}</DataContext.Provider>;\n};\n\nexport default DataProvider;\n","import { useState, useEffect } from 'react';\nimport { getTrendingSearchTerms } from 'services/getTrendingSearchTerms';\n\nconst useGetTrendingSearchTerms = () => {\n  const [gifs, setGifs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getTrendingSearchTerms().then((response) => setGifs(response));\n    setLoading(false);\n  }, []);\n\n  return { loading, gifs };\n};\n\nexport { useGetTrendingSearchTerms };\n","import { Route, Switch } from 'react-router';\nimport MainLayout from './components/Templates/MainLayout';\nimport Home from './components/Pages/Home';\nimport SearchResults from './components/Pages/SearchResults';\nimport Detail from './components/Pages/Detail';\nimport NotFound from './components/Pages/NotFound';\nimport DataProvider from 'contexts/DataProvider';\n\nfunction App() {\n  return (\n    <DataProvider>\n      <MainLayout>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/GiffyApp\" component={Home} />\n          <Route exact path=\"/search/:keyword\" component={SearchResults} />\n          <Route exact path=\"/gif/:gifId\" component={Detail} />\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </MainLayout>\n    </DataProvider>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\nimport { normalize } from 'styled-normalize';\n\nconst GlobalStyle = createGlobalStyle`\n\n${normalize}\n\n* {\n    box-sizing: border-box;\n}\n\n*::after, *::before {\n    box-sizing: inherit;\n}\n\nhtml {\n    font-size: 62.5%\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    font-family: 'Open Sans', sans-serif;\n    font-size:1.6rem;\n    font-weight: 400;\n    color: #000;\n}\n\nsection {\n    width: 100%;\n    padding: 20px;\n}\n\nh1, h2, h3, p {\n    margin: 0;\n    padding: 0;\n}\n\na {\n    text-decoration:none;\n    color: inherit;\n}\n\n`;\n\nexport default GlobalStyle;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport GlobalStyle from './GlobalStyle';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <GlobalStyle />\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}