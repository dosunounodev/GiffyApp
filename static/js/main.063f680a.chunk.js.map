{"version":3,"sources":["components/Organisms/Footer/styles.js","components/Organisms/Footer/index.jsx","components/Atoms/Logo/styles.js","components/Atoms/Logo/index.jsx","components/Organisms/Header/styles.js","components/Organisms/Header/index.jsx","components/Templates/MainLayout/styles.js","components/Templates/MainLayout/index.jsx","contexts/DataContext.js","components/Atoms/Gif/styles.js","components/Atoms/Gif/index.jsx","components/Organisms/ListOfGifs/styles.js","components/Organisms/ListOfGifs/index.jsx","components/Organisms/SearchForm/styles.js","components/Organisms/SearchForm/index.jsx","components/Pages/Home/styles.js","components/Pages/Home/index.jsx","components/Pages/Favs/styles.js","components/Pages/Favs/index.jsx","components/Pages/SearchResults/styles.js","services/settings.js","services/getGifs.js","hooks/useGetGifsByKeyword.js","components/Pages/SearchResults/index.jsx","components/Pages/Detail/styles.js","services/getGifById.js","components/Pages/Detail/index.jsx","hooks/useGetGifById.js","components/Pages/NotFound/index.jsx","services/getTrendingGifs.js","services/getTrendingSearchTerms.js","contexts/DataProvider.js","hooks/useGetTrendingGifs.js","hooks/useGetTrendingSearchTerms.js","App.js","GlobalStyle.js","reportWebVitals.js","index.js"],"names":["FooterWrapper","styled","footer","Footer","href","target","rel","LogoContainer","div","Title","h1","Logo","span","to","HeaderWrapper","header","Header","Main","main","MainLayout","children","DataContext","React","createContext","GifContainer","article","GifTitle","h3","GifImageWrapper","GifImage","img","Gif","gifData","id","title","url","alt","src","List","ListOfGifs","gifs","map","singleGif","SearchFormWrapper","form","SearchForm","keyword","setKeyword","history","useHistory","setLastSearch","useContext","onSubmit","e","preventDefault","push","localStorage","setItem","type","value","placeholder","onChange","HomeTitle","h2","SectionWrapper","TrendingsWrapper","TrendingGifLink","Link","ViewAllButton","button","Home","loading","lastSearch","lastSearchGifs","trendingGifs","trendingTerms","onClick","topic","FavsTitle","Favs","SearchTitle","API_KEY","API_URL","getGifs","a","limit","fetch","res","json","data","gif","images","downsized_medium","useGetGifsByKeyword","useState","setGifs","setLoading","useEffect","then","response","SearchResults","useParams","DetailTitle","getGifById","gifId","console","log","Detail","useGetGifById","NotFound","getTrendingGifs","getTrendingSearchTerms","LastSearchProvider","initialLastSearch","getItem","useGetTrendingGifs","useGetTrendingSearchTerms","Provider","App","DataProvider","exact","path","component","GlobalStyle","createGlobalStyle","normalize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.063f680a.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst FooterWrapper = styled.footer`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100px;\n  margin-top: auto;\n  color: #fafafa;\n  background-color: #252525;\n\n  p {\n    font-size: 1.8rem;\n    font-weight: bold;\n  }\n\n  a {\n    color: #1565c0;\n    &:hover {\n      color: #fff;\n      text-decoration: underline;\n    }\n  }\n`;\n\nexport { FooterWrapper };\n","import React from 'react';\nimport { FooterWrapper } from './styles';\n\nconst Footer = () => {\n  return (\n    <FooterWrapper>\n      <p>\n        Made with ğŸ’™ by{' '}\n        <a\n          href=\"https://github.com/dosunounodev\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          dosunounodev\n        </a>\n      </p>\n    </FooterWrapper>\n  );\n};\n\nexport default Footer;\n","import styled from 'styled-components';\n\nconst LogoContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nconst Title = styled.h1`\n  font-size: 4.8rem;\n  font-style: italic;\n  margin-right: 10px;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 1.6rem;\n  font-weight: 400;\n`;\n\nexport { LogoContainer, Title, SubTitle };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LogoContainer, SubTitle, Title } from './styles';\n\nconst Logo = () => {\n  return (\n    <Link to=\"/\">\n      <LogoContainer>\n        <Title>Giffy</Title>\n        {/* <SubTitle>The Gif Searcher</SubTitle> */}\n      </LogoContainer>\n    </Link>\n  );\n};\n\nexport default Logo;\n","import styled from 'styled-components';\n\nconst HeaderWrapper = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  padding: 20px;\n  color: #fafafa;\n  background: #b92b27; /* fallback for old browsers */\n  background: -webkit-linear-gradient(\n    to bottom,\n    #1565c0,\n    #111\n  ); /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(\n    to bottom,\n    #1565c0,\n    #111\n  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n`;\n\nexport { HeaderWrapper };\n","import React from 'react';\nimport Logo from 'components/Atoms/Logo';\nimport { HeaderWrapper } from './styles';\n\nconst Header = () => {\n  return (\n    <HeaderWrapper>\n      <Logo />\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #111;\n  color: #fff;\n`;\n\nexport { Main };\n","import React from 'react';\nimport Footer from 'components/Organisms/Footer';\nimport Header from 'components/Organisms/Header';\nimport { Main } from './styles';\n\nconst MainLayout = ({ children }) => {\n  return (\n    <Main>\n      <Header />\n      {children}\n      <Footer />\n    </Main>\n  );\n};\n\nexport default MainLayout;\n","import React from 'react';\n\nexport const DataContext = React.createContext();\n","import styled from 'styled-components';\n\nconst GifContainer = styled.article`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 400px;\n  padding: 20px;\n  background-color: rgba(255, 255, 255, 0.1);\n  border: 2px solid #fafafa;\n  border-radius: 6px;\n`;\n\nconst GifTitle = styled.h3`\n  width: 100%;\n  height: 50px;\n  max-width: 280px;\n  font-size: 1.4rem;\n  text-align: center;\n`;\n\nconst GifImageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  margin-top: 20px;\n  border-radius: 6px;\n  overflow: hidden;\n`;\n\nconst GifImage = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport { GifContainer, GifTitle, GifImageWrapper, GifImage };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { GifContainer, GifTitle, GifImageWrapper, GifImage } from './styles';\n\nconst Gif = ({ gifData }) => {\n  const { id, title, url } = gifData;\n  return (\n    <Link to={`/gif/${id}`}>\n      <GifContainer>\n        <GifTitle>{title}</GifTitle>\n        <GifImageWrapper>\n          <GifImage key={id} alt={title} src={url}></GifImage>\n        </GifImageWrapper>\n      </GifContainer>\n    </Link>\n  );\n};\n\nexport default Gif;\n","import styled from 'styled-components';\n\nconst List = styled.div`\n  display: grid;\n  /* grid-template-columns: repeat(auto-fill, minmax(280px, 1fr)); */\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  justify-items: center;\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  gap: 2rem;\n`;\n\nexport { List };\n","import React from 'react';\nimport Gif from 'components/Atoms/Gif';\nimport { List } from './styles';\n\nconst ListOfGifs = ({ gifs }) => {\n  return (\n    <List>\n      {gifs.map((singleGif) => (\n        <Gif key={singleGif.id} gifData={singleGif} />\n      ))}\n    </List>\n  );\n};\n\nexport default ListOfGifs;\n","import styled from 'styled-components';\n\nexport const SearchFormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  height: 100px;\n  max-width: 600px;\n  margin-bottom: 20px;\n  @media screen and (min-width: 650px) {\n    flex-direction: row;\n    justify-content: space-around;\n    height: 60px;\n  }\n\n  input,\n  button {\n    display: block;\n    width: 100%;\n    max-width: 280px;\n    height: 40px;\n    padding: 10px;\n    border: 2px solid #1565c0;\n    border-radius: 5px;\n    text-align: center;\n    font-weight: bold;\n    color: #1565c0;\n    transition-property: color, background-color;\n    transition-duration: 0.3s;\n    will-change: color, background-color;\n  }\n\n  input {\n    color: initial;\n  }\n\n  button {\n    cursor: pointer;\n    text-transform: uppercase;\n    &:hover {\n      color: #fff;\n      background-color: #1565c0;\n    }\n  }\n`;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router';\nimport { DataContext } from 'contexts/DataContext';\nimport { SearchFormWrapper } from './styles';\n\nconst SearchForm = ({ keyword, setKeyword }) => {\n  const history = useHistory();\n  const { setLastSearch } = useContext(DataContext);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    history.push(`/search/${keyword}`);\n    setLastSearch(keyword);\n    localStorage.setItem('lastSearch', keyword);\n  };\n\n  return (\n    <SearchFormWrapper onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={keyword}\n        placeholder=\"Search a gif here\"\n        onChange={(e) => setKeyword(e.target.value)}\n      />\n      <button>View All Results</button>\n    </SearchFormWrapper>\n  );\n};\n\nexport default SearchForm;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst HomeTitle = styled.h2`\n  display: block;\n  width: 100%;\n  margin-bottom: 20px;\n  font-size: 3.6rem;\n  text-align: center;\n`;\n\nconst SectionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  margin-bottom: 50px;\n`;\n\nconst TrendingsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  max-width: 900px;\n`;\n\nconst TrendingGifLink = styled(Link)`\n  font-size: 2rem;\n  margin: 10px;\n  padding: 5px;\n  border: 2px solid #1565c0;\n  &:hover {\n    background-color: #fff;\n    color: #1565c0;\n  }\n`;\n\nconst ViewAllButton = styled.button`\n  display: block;\n  width: 100%;\n  max-width: 280px;\n  height: 40px;\n  padding: 10px;\n  margin-top: 20px;\n  border: 2px solid #1565c0;\n  border-radius: 5px;\n  text-align: center;\n  font-weight: bold;\n  color: #1565c0;\n  transition-property: color, background-color;\n  transition-duration: 0.3s;\n  will-change: color, background-color;\n  cursor: pointer;\n  text-transform: uppercase;\n  &:hover {\n    color: #fff;\n    background-color: #1565c0;\n  }\n`;\n\nexport {\n  HomeTitle,\n  SectionWrapper,\n  TrendingsWrapper,\n  TrendingGifLink,\n  ViewAllButton,\n};\n","import React, { useContext } from 'react';\nimport { DataContext } from 'contexts/DataContext';\nimport { useHistory } from 'react-router';\nimport ListOfGifs from 'components/Organisms/ListOfGifs';\nimport SearchForm from 'components/Organisms/SearchForm';\nimport {\n  HomeTitle,\n  SectionWrapper,\n  TrendingsWrapper,\n  TrendingGifLink,\n  ViewAllButton,\n} from './styles';\n\nconst Home = () => {\n  const {\n    keyword,\n    setKeyword,\n    gifs,\n    loading,\n    lastSearch,\n    lastSearchGifs,\n    trendingGifs,\n    trendingTerms,\n  } = useContext(DataContext);\n\n  const history = useHistory();\n\n  return (\n    <section>\n      {loading ? (\n        <HomeTitle>Cargando . . . </HomeTitle>\n      ) : (\n        <>\n          <SectionWrapper>\n            <HomeTitle>Search a Gif</HomeTitle>\n            <SearchForm keyword={keyword} setKeyword={setKeyword} />\n            <ListOfGifs gifs={gifs} />\n          </SectionWrapper>\n\n          {lastSearch ? (\n            <SectionWrapper>\n              <HomeTitle>Last Search: '{lastSearch}'</HomeTitle>\n              <ListOfGifs gifs={lastSearchGifs} />\n              <ViewAllButton\n                onClick={() => history.push(`/search/${lastSearch}`)}\n              >\n                View all '{lastSearch}' gifs\n              </ViewAllButton>\n            </SectionWrapper>\n          ) : null}\n\n          <SectionWrapper>\n            <HomeTitle>Top Categories</HomeTitle>\n            <TrendingsWrapper>\n              {trendingTerms.map((topic) => (\n                <TrendingGifLink key={topic} to={`/search/${topic}`}>\n                  {topic}\n                </TrendingGifLink>\n              ))}\n            </TrendingsWrapper>\n          </SectionWrapper>\n\n          <SectionWrapper>\n            <HomeTitle>The Top 10 Gifs Trending</HomeTitle>\n            <ListOfGifs gifs={trendingGifs} />\n          </SectionWrapper>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nconst FavsTitle = styled.h2`\n  margin-bottom: 20px;\n  font-size: 3.6rem;\n  text-align: center;\n`;\n\nexport { FavsTitle };\n","import React from 'react';\nimport { FavsTitle } from './styles';\n\nconst Favs = () => {\n  return (\n    <section>\n      <FavsTitle>Estos son los favs</FavsTitle>\n    </section>\n  );\n};\n\nexport default Favs;\n","import styled from 'styled-components';\n\nconst SearchTitle = styled.h2`\n  margin-bottom: 20px;\n  font-size: 3.6rem;\n  text-align: center;\n`;\n\nexport { SearchTitle };\n","export const API_KEY = 'MZTqNa5Op2YRSnpg7q7qWOMNtQPDqtSM';\n\nexport const API_URL = 'https://api.giphy.com/v1';\n","import { API_URL, API_KEY } from 'services/settings';\n\nconst getGifs = async ({ keyword = 'panda', limit = 10 } = {}) => {\n  const res = await fetch(\n    `${API_URL}/gifs/search?api_key=${API_KEY}&q=${keyword}&limit=${limit}&offset=0&rating=g&lang=en`\n  );\n  const json = await res.json();\n  const { data } = json;\n  const gifs = data.map((gif) => {\n    const { id, images, title } = gif;\n    const url = images.downsized_medium.url;\n    return { id, title, url };\n  });\n  return gifs;\n};\n\nexport { getGifs };\n","import { useState, useEffect } from 'react';\nimport { getGifs } from 'services/getGifs';\n\nconst useGetGifsByKeyword = ({ keyword, limit=10 }) => {\n  const [gifs, setGifs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getGifs({ keyword, limit })\n      .then((response) => setGifs(response))\n      .then(setLoading(false));\n  }, [keyword, limit]);\n\n  return { loading, gifs };\n};\n\nexport { useGetGifsByKeyword };\n","import React from 'react';\nimport { useParams } from 'react-router';\nimport ListOfGifs from 'components/Organisms/ListOfGifs';\nimport { SearchTitle } from './styles';\nimport { useGetGifsByKeyword } from 'hooks/useGetGifsByKeyword';\n\nconst SearchResults = () => {\n  const { keyword } = useParams();\n  const { gifs, loading } = useGetGifsByKeyword({ keyword, limit: 25 });\n\n  return (\n    <section>\n      {loading ? (\n        <SearchTitle>Cargando . . . </SearchTitle>\n      ) : (\n        <>\n          <SearchTitle>Resultados de '{keyword}'</SearchTitle>\n          <ListOfGifs gifs={gifs} />\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default SearchResults;\n","import styled from 'styled-components';\n\nconst DetailTitle = styled.h2`\n  margin-bottom: 20px;\n  font-size: 3.6rem;\n  text-align: center;\n`;\n\nexport { DetailTitle };\n","import { API_URL, API_KEY } from 'services/settings';\n\nconst getGifById = async ({ gifId } = {}) => {\n  const res = await fetch(`${API_URL}/gifs/${gifId}?api_key=${API_KEY}`);\n  const json = await res.json();\n  const { id, images, title } = json.data;\n  const url = images.downsized_medium.url;\n  const gif = [{ id, title, url }];\n  console.log(gif);\n  return gif;\n};\n\nexport { getGifById };\n","import React from 'react';\nimport ListOfGifs from 'components/Organisms/ListOfGifs';\nimport { useParams } from 'react-router';\nimport { DetailTitle } from './styles';\nimport { useGetGifById } from 'hooks/useGetGifById';\n\nconst Detail = () => {\n  const { gifId } = useParams();\n  const { gifs, loading } = useGetGifById({ gifId });\n\n  return (\n    <section>\n      {loading ? (\n        <DetailTitle>Cargando . . . </DetailTitle>\n      ) : (\n        <>\n          {/* <DetailTitle>Gif Detail</DetailTitle> */}\n          <ListOfGifs gifs={gifs} />\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default Detail;\n","import { useState, useEffect } from 'react';\nimport { getGifById } from 'services/getGifById';\n\nconst useGetGifById = ({ gifId }) => {\n  const [gifs, setGifs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getGifById({ gifId }).then((response) => setGifs(response));\n    setLoading(false);\n  }, [gifId]);\n\n  return { loading, gifs };\n};\n\nexport { useGetGifById };\n","import React from 'react'\n\nconst NotFound = () => {\n    return (\n        <section>\n            <h2>404 not found</h2>\n        </section>\n    )\n}\n\nexport default NotFound\n","import { API_URL, API_KEY } from 'services/settings';\n\nconst getTrendingGifs = async ({ limit = 10 } = {}) => {\n  const res = await fetch(\n    `${API_URL}/gifs/trending?api_key=${API_KEY}&limit=${limit}&rating=g`\n  );\n  const json = await res.json();\n  const { data } = json;\n  const gifs = data.map((gif) => {\n    const { id, images, title } = gif;\n    const url = images.downsized_medium.url;\n    return { id, title, url };\n  });\n  return gifs;\n};\n\nexport { getTrendingGifs };\n\n//\n","import { API_URL, API_KEY } from 'services/settings';\n\nconst getTrendingSearchTerms = async () => {\n  const res = await fetch(`${API_URL}/trending/searches?api_key=${API_KEY}`);\n  const json = await res.json();\n  console.log(json);\n  const { data } = json;\n  return data;\n};\n\nexport { getTrendingSearchTerms };\n","import React, { useState } from 'react';\nimport { DataContext } from './DataContext';\nimport { useGetGifsByKeyword } from 'hooks/useGetGifsByKeyword';\nimport { useGetTrendingGifs } from 'hooks/useGetTrendingGifs';\nimport { useGetTrendingSearchTerms } from 'hooks/useGetTrendingSearchTerms';\n\nconst LastSearchProvider = ({ children }) => {\n  const [keyword, setKeyword] = useState('');\n  const { gifs, loading } = useGetGifsByKeyword({ keyword, limit: 5 });\n\n  const initialLastSearch = localStorage.getItem('lastSearch') || null;\n  const [lastSearch, setLastSearch] = useState(initialLastSearch);\n  const { gifs: lastSearchGifs } = useGetGifsByKeyword({\n    keyword: lastSearch || '',\n    limit: 5,\n  });\n\n  const { gifs: trendingGifs } = useGetTrendingGifs({\n    limit: 10,\n  });\n  const { gifs: trendingTerms } = useGetTrendingSearchTerms();\n\n  const data = {\n    keyword,\n    setKeyword,\n    gifs,\n    loading,\n    lastSearch,\n    setLastSearch,\n    lastSearchGifs,\n    trendingGifs,\n    trendingTerms,\n  };\n\n  return <DataContext.Provider value={data}>{children}</DataContext.Provider>;\n};\n\nexport default LastSearchProvider;\n","import { useState, useEffect } from 'react';\nimport { getTrendingGifs } from 'services/getTrendingGifs';\n\nconst useGetTrendingGifs = ({ limit }) => {\n  const [gifs, setGifs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getTrendingGifs({ limit }).then((response) => setGifs(response));\n    setLoading(false);\n  }, [limit]);\n\n  return { loading, gifs };\n};\n\nexport { useGetTrendingGifs };\n","import { useState, useEffect } from 'react';\nimport { getTrendingSearchTerms } from 'services/getTrendingSearchTerms';\n\nconst useGetTrendingSearchTerms = () => {\n  const [gifs, setGifs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getTrendingSearchTerms().then((response) => setGifs(response));\n    setLoading(false);\n  }, []);\n\n  return { loading, gifs };\n};\n\nexport { useGetTrendingSearchTerms };\n","import { Route, Switch } from 'react-router';\nimport MainLayout from './components/Templates/MainLayout';\nimport Home from './components/Pages/Home';\nimport Favs from './components/Pages/Favs';\nimport SearchResults from './components/Pages/SearchResults';\nimport Detail from './components/Pages/Detail';\nimport NotFound from './components/Pages/NotFound';\nimport DataProvider from 'contexts/DataProvider';\n\nfunction App() {\n  return (\n    <DataProvider>\n      <MainLayout>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/GiffyApp\" component={Home} />\n          <Route exact path=\"/favs\" component={Favs} />\n          <Route exact path=\"/search/:keyword\" component={SearchResults} />\n          <Route exact path=\"/gif/:gifId\" component={Detail} />\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </MainLayout>\n    </DataProvider>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\nimport { normalize } from 'styled-normalize';\n\nconst GlobalStyle = createGlobalStyle`\n\n${normalize}\n\n* {\n    box-sizing: border-box;\n}\n\n*::after, *::before {\n    box-sizing: inherit;\n}\n\nhtml {\n    font-size: 62.5%\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    font-family: 'Open Sans', sans-serif;\n    font-size:1.6rem;\n    font-weight: 400;\n    color: #fafafa;\n}\n\nsection {\n    width: 100%;\n    padding: 20px;\n}\n\nh1, h2, h3, p {\n    margin: 0;\n    padding: 0;\n}\n\na {\n    text-decoration:none;\n    color: inherit;\n}\n\n`;\n\nexport default GlobalStyle;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport GlobalStyle from './GlobalStyle';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <GlobalStyle />\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}